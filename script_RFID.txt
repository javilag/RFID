CREATE TABLE Persona (doc_id varchar(12) primary key, nombre varchar(80), genero varchar(10), correo varchar(80), tel varchar(7), cel varchar(10),
cod_tarjeta varchar(4) unique, cod_universidad varchar(12) unique);

CREATE TABLE Programa (codigo varchar(3) primary key, nombre varchar(80) unique, cant_semestre numeric);

CREATE TABLE Registro_En_Sa (codigo Serial, id_persona varchar(12) references persona(doc_id), fecha_hora varchar(25), tipo varchar(7), primary key (codigo, id_persona));

CREATE TABLE PersonaxPrograma (id_persona varchar (12) references persona(doc_id), 
cod_programa varchar(3) references programa(codigo), ultimo_semestre numeric, titulacion varchar(10), estado varchar(10), 
primary key (id_persona, cod_programa));

INSERT INTO persona VALUES ('1037638826', 'Juan Jose', 'Masculino', 'juanjo-805@hotmail.com', '3336213', '3046518850', '0001', '201217021010');
INSERT INTO persona VALUES ('1037638827', 'Carlos', 'Masculino', 'carlos@hotmail.com', '3346213', '3036518850', '0002', '201317021010');
INSERT INTO persona VALUES ('1037638828', 'Jorge', 'Masculino', 'jorge@hotmail.com', '3356213', '3036518850', '0003', '201327021010');
INSERT INTO persona VALUES ('1037638829', 'Omar', 'Masculino', 'omar@hotmail.com', '3366213', '3046518850', '0004', '201337021010');
INSERT INTO persona VALUES ('1037638830', 'Adriana', 'Femenino', 'adriana@hotmail.com', '3376213', '3056518850', '0005', '201347021010');

INSERT INTO programa VALUES ('001', 'Ingenieria de Sistemas', 9);
INSERT INTO programa VALUES ('002', 'Ingenieria Electronica', 10);
INSERT INTO programa VALUES ('003', 'Tecnologia de Sistemas', 6);

select * from programa order by codigo;
select * from programa;

INSERT INTO personaxprograma VALUES ('1037638826', '001', 6, null, 'Activo');
INSERT INTO personaxprograma VALUES ('1037638827', '001', 7, null, 'Activo');
INSERT INTO personaxprograma VALUES ('1037638828', '002', 10, 'Graduado', 'Egresado');
INSERT INTO personaxprograma VALUES ('1037638829', '003', 3, null, 'Inactivo');
INSERT INTO personaxprograma VALUES ('1037638828', '001', 4, null, 'Activo');

SELECT * FROM personaxprograma;

SELECT a.nombre, a.cod_tarjeta FROM persona AS a, personaxprograma AS b WHERE b.id_persona='1037638826'
and b.id_persona=a.doc_id;

SELECT a.nombre, a.cod_tarjeta, c.nombre FROM persona AS a, personaxprograma AS b, programa AS c WHERE b.id_persona='1037638826'
and b.id_persona=a.doc_id and c.codigo=b.cod_programa;

SELECT a.nombre, a.cod_tarjeta, c.nombre FROM persona AS a, personaxprograma AS b, programa AS c WHERE b.id_persona='1037638828'
and b.id_persona=a.doc_id and c.codigo=b.cod_programa;




/*********************************************************************************************************************************************************************/

---PROCEDIMIENTO ALMACENADO INGRESAR PERSONA

CREATE OR REPLACE FUNCTION "ingresar_persona"(
    doc_id character varying,
    nom character varying,
    gene character varying,
    correo character varying,
    tel character varying,
    cel character varying,
    cod_tarj character varying,
    cod_univ character varying)
RETURNS void AS
$$BEGIN
INSERT INTO persona (doc_id, nombre, genero, correo, tel, cel, cod_tarjeta, cod_universidad) VALUES (doc_id, nom, gene, correo, tel, cel, cod_tarj, cod_univ);
END;
$$
LANGUAGE plpgsql VOLATILE

/*********************************************************************************************************************************************************************/

CREATE OR REPLACE FUNCTION registro_persona( 
   j_serial CHARACTER VARYING, 
   j_fecha_hora CHARACTER VARYING)
RETURNS void AS
$$
DECLARE 
  res_id CHARACTER VARYING;
  res_tipo CHARACTER VARYING;
BEGIN 
  SELECT doc_id INTO res_id FROM persona WHERE cod_tarjeta=j_serial;
  SELECT tipo INTO res_tipo FROM registro_en_sa WHERE id_persona=res_id and codigo = (SELECT max(codigo) from registro_en_sa);

 IF res_tipo !='SALIDA' THEN
   	INSERT INTO registro_en_sa (id_persona, fecha_hora, tipo) VALUES (res_id, j_fecha_hora, 'ENTRADA');
 ELSEIF res_tipo='SALIDA' THEN
 	INSERT INTO registro_en_sa (id_persona, fecha_hora, tipo) VALUES (res_id, j_fecha_hora, 'ENTRADA');
 ELSE
 	INSERT INTO registro_en_sa (id_persona, fecha_hora, tipo) VALUES (res_id, j_fecha_hora, 'SALIDA');
 END IF;
END;
$$
  LANGUAGE plpgsql VOLATILE











CREATE OR REPLACE FUNCTION registro_persona( 
   j_serial CHARACTER VARYING, 
   j_fecha_hora CHARACTER VARYING)
RETURNS void AS
$$
DECLARE 
  res_id CHARACTER VARYING;
  res_tipo CHARACTER VARYING;
BEGIN 
  SELECT doc_id INTO res_id FROM persona WHERE cod_tarjeta=j_serial;
  SELECT tipo INTO res_tipo FROM registro_en_sa WHERE id_persona=res_id and codigo = (SELECT max(codigo) from registro_en_sa);

 IF res_tipo !='ENTRADA' THEN
   	INSERT INTO registro_en_sa (id_persona, fecha_hora, tipo) VALUES (res_id, j_fecha_hora, 'ENTRADA');
 ELSE
 	INSERT INTO registro_en_sa (id_persona, fecha_hora, tipo) VALUES (res_id, j_fecha_hora, 'SALIDA');
 END IF;
END;
$$
  LANGUAGE plpgsql VOLATILE


/*********************************************************************************************************************************************************************/


~~~~~~~~~~~~~~DE AQUI PARA ABAJO NOOOOOO~~~~~~~~~~~~~~~~


--PROCEDIMIENTO ALMACENADO LLEGO PERSONA

CREATE OR REPLACE FUNCTION llego_persona(serial character varying)
  RETURNS character varying AS
$$
DECLARE 
resultado CHARACTER VARYING; 
BEGIN
SELECT doc_id INTO resultado FROM persona WHERE cod_tarjeta=serial;
RETURN resultado;
END;$$
  LANGUAGE plpgsql VOLATILE



CREATE OR REPLACE FUNCTION ingresar_entrada(
    id_persona_fk character varying,
    fecha_hora_entrada character varying)
  RETURNS void AS
$$
INSERT INTO registro_en_sa (fecha_hora_entrada, fecha_hora_salida, id_persona) 
VALUES (fecha_hora_entrada, null, id_persona_fk);
$$
  LANGUAGE sql VOLATILE




CREATE OR REPLACE FUNCTION ingresar_salida(
    id_persona_fk character varying,
    fecha_hora_salida character varying)
  RETURNS void AS
$$
INSERT INTO registro_en_sa (fecha_hora_entrada, fecha_hora_salida, id_persona) 
VALUES (null, fecha_hora_salida, id_persona_fk);
$$
  LANGUAGE sql VOLATILE

























PROCEDIMIENTO ALMACENADO BUSQUEDA POR PROGRAMA

busquedaSistemasProcedure

SELECT a.nombre, a.cod_tarjeta, c.nombre FROM persona AS a, personaxprograma AS b, programa AS c WHERE b.cod_programa='001'
and b.id_persona=a.doc_id and b.cod_programa=c.codigo;

busquedaElectronicaProcedure

SELECT a.nombre, a.cod_tarjeta, c.nombre FROM persona AS a, personaxprograma AS b, programa AS c WHERE b.cod_programa='002'
and b.id_persona=a.doc_id and b.cod_programa=c.codigo;

------------------------------------------------------------------------

PROCEDIMIENTO ALMACENADO TRAE CODIGO (VENTANA)

SELECT codigo FROM programa WHERE nombre='Ingenieria de Sistemas';
SELECT codigo FROM programa WHERE nombre='Ingenieria de Electrónica';
SELECT codigo FROM programa WHERE nombre='Ingenieria de Electrónica';

CREATE OR REPLEACE FUNCTION Procedimiento1()
DECLARE
BEGIN
SELECT codigo FROM programa WHERE nombre='Ingeniería de Electrónica';
END;
...


CREATE OR REPLACE FUNCTION codigo_ventana()
RETURNS varchar AS $$
BEGIN
SELECT codigo FROM programa WHERE nombre='Ingeniería de Sistemas';
SELECT codigo FROM programa WHERE nombre='Ingeniería de Electrónica';
SELECT codigo FROM programa WHERE nombre='Ingeniería de Electrónica';
END;
$$ LANGUAGE plpgsql



consultarpersona(codigo as character varying)
BEGIN
SELECT
END


PA_REGISTRAR_ENTRADA(identidad_per character)

IF (identidad_persona IN registro
INSERT INTO registro_en_sa (codigo, fecha_hora_entrada, fecha_hora_salida, id_persona) VALUES ('001', '2015/may/14 13:45:09', null, '1037638826);
